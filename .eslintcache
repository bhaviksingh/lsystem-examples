[{"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx":"1","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/HomePage.tsx":"2","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx":"3","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx":"4","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts":"5","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx":"6","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle.tsx":"7","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx":"8","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSViewer.tsx":"9","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle3D.tsx":"10"},{"size":570,"mtime":1611418994008,"results":"11","hashOfConfig":"12"},{"size":3090,"mtime":1611603744394,"results":"13","hashOfConfig":"12"},{"size":3135,"mtime":1611594700310,"results":"14","hashOfConfig":"12"},{"size":1526,"mtime":1611361492848,"results":"15","hashOfConfig":"12"},{"size":1839,"mtime":1611617354197,"results":"16","hashOfConfig":"12"},{"size":1411,"mtime":1611593264058,"results":"17","hashOfConfig":"12"},{"size":4233,"mtime":1611617563844,"results":"18","hashOfConfig":"12"},{"size":13369,"mtime":1611616216153,"results":"19","hashOfConfig":"12"},{"size":965,"mtime":1611618257030,"results":"20","hashOfConfig":"12"},{"size":3289,"mtime":1611617177521,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"doautr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx",[],["45","46"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/HomePage.tsx",["47"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx",["48"],"import LSystem from \"@bvk/lsystem\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport P5Turtle from \"./P5Turtle\";\nimport { encodeParams, flattenText, GFXProps } from \"./utils\";\nimport VizSensor from \"react-visibility-sensor\";\n\ninterface LSPreviewProps {\n  axiomText: string;\n  productionsText: string[];\n  iterations: number;\n  gfxprops?: GFXProps;\n}\ninterface LSPreviewState {\n  currentLS: LSystem | undefined;\n  iterations: number;\n  hasBeenVisible: boolean;\n}\nexport class LSPreview extends React.Component<LSPreviewProps, LSPreviewState> {\n  state: LSPreviewState = {\n    currentLS: undefined,\n    iterations: this.props.iterations,\n    hasBeenVisible: false,\n  };\n  updateIterations = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let newNum = parseFloat(e.target.value);\n    if (this.state.currentLS) {\n      this.state.currentLS.setIterations(newNum);\n      this.setState({ currentLS: this.state.currentLS, iterations: newNum });\n    } else {\n      this.setState({ iterations: newNum });\n    }\n  };\n  createLS = (isVisible: boolean) => {\n    if (isVisible && this.state.currentLS === undefined) {\n      let ls = new LSystem(\n        this.props.axiomText,\n        this.props.productionsText,\n        this.props.iterations\n      );\n      this.setState({ currentLS: ls, hasBeenVisible: true });\n    }\n  };\n  refreshLS = () => {\n    let ls = new LSystem(\n      this.props.axiomText,\n      this.props.productionsText,\n      this.props.iterations\n    );\n    this.setState({ currentLS: ls });\n  };\n  render = () => {\n    return (\n      <VizSensor onChange={this.createLS} partialVisibility={true}>\n        <div\n          className={`side-by-side ${\n            this.state.hasBeenVisible === false ? \"\" : \"become-visible\"\n          }`}\n        >\n          <div>\n            <div>\n              Lystem: <br />\n              <ul>\n                <li> {this.props.axiomText} </li>{\" \"}\n                {this.props.productionsText.map((pT) => (\n                  <li> {pT}</li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <div className=\"horizontal-stack\">\n                <div className=\"clickable\">\n                  <Link\n                    to={`/edit${encodeParams(\n                      this.props.axiomText,\n                      this.props.productionsText,\n                      this.props.gfxprops\n                    )}`}\n                  >\n                    edit\n                  </Link>\n                </div>\n                <div className=\"clickable\" onClick={this.refreshLS}>\n                  refresh\n                </div>\n              </div>\n              <label>iterations: {this.state.iterations}</label>\n              <input\n                type=\"number\"\n                value={this.state.iterations}\n                onChange={this.updateIterations}\n                min={0}\n                max={this.props.iterations}\n              />\n            </div>\n          </div>\n          <P5Turtle\n            LSystem={this.state.currentLS}\n            GFXProps={this.props.gfxprops}\n          />\n        </div>\n      </VizSensor>\n    );\n  };\n}\n","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx",["49"],"import React from \"react\";\nimport LSystem from \"@bvk/lsystem\";\nimport LSCustomizer from \"./LSCustomizer\";\nimport P5Turtle from \"./P5Turtle\";\nimport { GFXProps } from \"./utils\";\nimport LSViewer from \"./LSViewer\";\n\ninterface LSEditorState {\n  LSystem: LSystem | undefined,\n  gfxProps?: GFXProps\n}\ninterface LSEditorProps {\n  initAxiomString: string,\n  initProductionsString: string[],\n  initGFXProps?: GFXProps\n}\nexport default class LSEditor extends React.Component<LSEditorProps, LSEditorState> {\n  state: LSEditorState = {\n      LSystem: undefined,\n      gfxProps: this.props.initGFXProps || {}\n  }\n  onLSIterated = (LS: LSystem) => {\n      this.setState({ LSystem: LS })\n  }\n  onLSReset = (LS: LSystem) => {\n      this.setState({ LSystem: LS });\n  }\n  onGFXPropsUpdated = (gfxProps: GFXProps) => {\n      this.setState({gfxProps: gfxProps});\n  }\n  render() {\n      return (\n      <div className=\"side-by-side\">\n          <LSCustomizer\n          onLSIterated={this.onLSIterated}\n          onLSReset={this.onLSReset}\n          onGFXPropsUpdate={this.onGFXPropsUpdated}\n          initAxiom={this.props.initAxiomString}\n          initProductions={this.props.initProductionsString}\n          initGFXProps={this.props.initGFXProps}\n          key=\"LSCustomizer\"\n          initIterations={2}\n          />\n          <LSViewer LSystem={this.state.LSystem} gfxProps={this.state.gfxProps}/>\n      </div >\n      )\n    }\n}\n\n","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle.tsx",["50"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSViewer.tsx",["51"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle3D.tsx",["52","53","54","55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":5,"column":24,"nodeType":"65","messageId":"66","endLine":5,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":84,"column":59,"nodeType":"71","messageId":"72","endLine":84,"endColumn":61},{"ruleId":"63","severity":1,"message":"73","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":31},{"ruleId":"63","severity":1,"message":"74","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":10},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":15},{"ruleId":"63","severity":1,"message":"75","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":94,"column":24,"nodeType":"71","messageId":"72","endLine":94,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":97,"column":24,"nodeType":"71","messageId":"72","endLine":97,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":100,"column":24,"nodeType":"71","messageId":"72","endLine":100,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":103,"column":24,"nodeType":"71","messageId":"72","endLine":103,"endColumn":26},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'LSystem' is defined but never used.","Identifier","unusedVar","'flattenText' is defined but never used.","'P5Turtle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'findAllInRenderedTree' is defined but never used.","'p5' is defined but never used.","'GFXProps' is defined but never used.","no-global-assign","no-unsafe-negation"]