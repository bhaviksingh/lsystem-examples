[{"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx":"1","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx":"2","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx":"3","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts":"4","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx":"5","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx":"6","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSViewer.tsx":"7","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5Turtle3D.tsx":"8","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5Turtle.tsx":"9","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5TurtlePixel.tsx":"10","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/ExamplesPage.tsx":"11","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/Examples/Lilac.tsx":"12"},{"size":838,"mtime":1612129883678,"results":"13","hashOfConfig":"14"},{"size":4005,"mtime":1612129936272,"results":"15","hashOfConfig":"14"},{"size":1337,"mtime":1612046126268,"results":"16","hashOfConfig":"14"},{"size":2780,"mtime":1611966469018,"results":"17","hashOfConfig":"14"},{"size":1474,"mtime":1612129574895,"results":"18","hashOfConfig":"14"},{"size":13275,"mtime":1611966274849,"results":"19","hashOfConfig":"14"},{"size":1331,"mtime":1612129535029,"results":"20","hashOfConfig":"14"},{"size":3573,"mtime":1612135871265,"results":"21","hashOfConfig":"14"},{"size":5510,"mtime":1612135850146,"results":"22","hashOfConfig":"14"},{"size":2583,"mtime":1612130068297,"results":"23","hashOfConfig":"14"},{"size":3528,"mtime":1612129862744,"results":"24","hashOfConfig":"14"},{"size":2988,"mtime":1612136902002,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"doautr",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx",[],["53","54"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx",["55"],"import React from \"react\";\nimport LSystem from \"@bvk/lsystem\";\nimport LSCustomizer from \"./LSCustomizer\";\nimport P5Turtle from \"./LSDraw/P5Turtle\";\nimport { GFXProps, LSProps } from \"./utils\";\nimport LSViewer from \"./LSViewer\";\n\n\n/* LSEditor.ts\n* This class is a combination of an LSCustomizer and an LSViewer\n* It manages updates from the customizer, and mantains LS/GFXProps to pass into the viewer.\n* */\ninterface LSEditorState {\n  LSystem: LSystem | undefined,\n  gfxProps?: GFXProps\n}\ninterface LSEditorProps {\n  initLSProps: LSProps\n  initGFXProps?: GFXProps\n}\nexport default class LSEditor extends React.Component<LSEditorProps, LSEditorState> {\n  state: LSEditorState = {\n      LSystem: undefined,\n      gfxProps: this.props.initGFXProps || {}\n  }\n  onLSIterated = (LS: LSystem) => {\n      this.setState({ LSystem: LS })\n  }\n  onLSReset = (LS: LSystem) => {\n      this.setState({ LSystem: LS });\n  }\n  onGFXPropsUpdated = (gfxProps: GFXProps) => {\n      this.setState({gfxProps: gfxProps});\n  }\n  render() {\n      return (\n      <div className=\"side-by-side\">\n          <LSCustomizer\n          onLSIterated={this.onLSIterated}\n          onLSReset={this.onLSReset}\n          onGFXPropsUpdate={this.onGFXPropsUpdated}\n          initLSProps={this.props.initLSProps}\n          initGFXProps={this.props.initGFXProps}\n          key=\"LSCustomizer\"\n          />\n          <LSViewer LSystem={this.state.LSystem} gfxProps={this.state.gfxProps}/>\n      </div >\n      )\n    }\n}\n\n","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSViewer.tsx",["56"],"import LSystem from \"@bvk/lsystem\";\nimport React from \"react\"\nimport { findAllInRenderedTree } from \"react-dom/test-utils\";\nimport P5Turtle from \"./LSDraw/P5Turtle\";\nimport P5Turtle3D from \"./LSDraw/P5Turtle3D\";\nimport P5TurtlePixel from \"./LSDraw/P5TurtlePixel\";\nimport {GFXProps} from \"./utils\"\n\n/* LSViewer.ts\n* This class shows a given LSystem and GFXProps (through Props) in every renderer\n* It is used primarily by LSEditor.\n* */\ninterface myProps {\n  LSystem: LSystem | undefined;\n  gfxProps?: GFXProps\n}\nexport default class LSViewer extends React.Component<myProps>{\n  \n  render() {\n    return (\n      <div className=\"canvas-border\"> \n        <P5Turtle3D key=\"gfx-3d-viewer\" LSystem={this.props.LSystem} GFXProps={this.props.gfxProps}/>\n        <P5TurtlePixel key=\"gfx-pixel-view\" LSystem={this.props.LSystem} GFXProps={this.props.gfxProps}/>\n        <P5Turtle key=\"gfx-viewer\" LSystem={this.props.LSystem} GFXProps={this.props.gfxProps} />        \n        <div key=\"text-viewer\"> {LSText(this.props.LSystem)} </div>\n      </div>\n    )\n  }\n}\n\nexport function LSText(LSystem: LSystem | undefined) {\n  if (!LSystem) return \"LSystem doesnt exist\"\n  let text = LSystem.getAllIterationsAsString();\n  let textDivs = text.map((val, index) => (\n    <li>  {val}  </li>\n  ));\n  return <ol style={{width: \"100%\"}}> {textDivs} </ol>\n}","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5Turtle3D.tsx",["57","58","59","60"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5Turtle.tsx",["61","62"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSDraw/P5TurtlePixel.tsx",["63"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/ExamplesPage.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/Examples/Lilac.tsx",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":104,"column":24,"nodeType":"76","messageId":"77","endLine":104,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":107,"column":24,"nodeType":"76","messageId":"77","endLine":107,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":110,"column":24,"nodeType":"76","messageId":"77","endLine":110,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":113,"column":24,"nodeType":"76","messageId":"77","endLine":113,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":121,"column":59,"nodeType":"76","messageId":"77","endLine":121,"endColumn":61},{"ruleId":"74","severity":1,"message":"75","line":170,"column":20,"nodeType":"76","messageId":"77","endLine":170,"endColumn":22},{"ruleId":"69","severity":1,"message":"78","line":24,"column":9,"nodeType":"71","messageId":"72","endLine":24,"endColumn":10},{"ruleId":"69","severity":1,"message":"79","line":5,"column":29,"nodeType":"71","messageId":"72","endLine":5,"endColumn":37},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'P5Turtle' is defined but never used.","Identifier","unusedVar","'findAllInRenderedTree' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'p' is assigned a value but never used.","'GFXProps' is defined but never used.","no-global-assign","no-unsafe-negation"]