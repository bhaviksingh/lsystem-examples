[{"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx":"1","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/HomePage.tsx":"2","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx":"3","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx":"4","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts":"5","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx":"6","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle.tsx":"7","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx":"8"},{"size":619,"mtime":1611361697082,"results":"9","hashOfConfig":"10"},{"size":2386,"mtime":1611361690121,"results":"11","hashOfConfig":"10"},{"size":1599,"mtime":1611361291650,"results":"12","hashOfConfig":"10"},{"size":1526,"mtime":1611361492848,"results":"13","hashOfConfig":"10"},{"size":1839,"mtime":1611361046774,"results":"14","hashOfConfig":"10"},{"size":1352,"mtime":1611361483931,"results":"15","hashOfConfig":"10"},{"size":3582,"mtime":1611361285678,"results":"16","hashOfConfig":"10"},{"size":13136,"mtime":1611361816474,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"doautr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/index.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/HomePage.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSPreview.tsx",[],["36","37"],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/pages/EditorPage.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/utils.ts",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSEditor.tsx",[],"/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/P5Turtle.tsx",["38"],"import React from \"react\"\nimport p5 from \"p5\"\nimport LSystem from \"@bvk/lsystem\";\nimport { GFXProps } from \"./utils\";\n\n\ninterface myProps {\n  LSystem: LSystem | undefined;\n  GFXProps?: GFXProps\n}\nexport default class P5Turtle extends React.Component<myProps> {\n  private p5Context: p5 | undefined;\n  private containerRef = React.createRef<HTMLDivElement>();\n  constructor(props: myProps) {\n    super(props);\n    this.drawCS = this.drawCS.bind(this);\n    this.drawChar = this.drawChar.bind(this);\n    this.redraw = this.redraw.bind(this);\n  }\n  componentDidMount() {\n    if (this.containerRef.current)\n      new p5(this.sketch, this.containerRef.current);\n  }\n  componentDidUpdate() {\n    this.redraw();\n  }\n  sketch = (p: p5) => {\n    p.setup = () => {\n      p.createCanvas(this.props.GFXProps?.width || 800, this.props.GFXProps?.height || 800);\n      p.angleMode(p.DEGREES);\n      p.colorMode(p.HSB);\n      p.noLoop();\n      this.p5Context = p;\n      this.redraw();\n    };\n    p.draw = () => {\n\n    }\n  };\n  componentWillUnmount = () => {\n    this.p5Context?.remove();\n    this.p5Context = undefined;\n  }\n  redraw() {\n    if (this.p5Context !== undefined) {\n      this.p5Context?.clear();\n      this.p5Context?.background(0, 0, 90);\n      this.drawCS();\n      this.p5Context?.noLoop();\n    } else {\n      console.log(\"Couldnt redraw\");\n      console.log(this.p5Context);\n    }\n  }\n  drawCS() {\n    if (this.props.LSystem !== undefined) {\n      //Setup drawing\n      let cS = this.props.LSystem.getIterationAsObject();\n      let p = this.p5Context as p5;\n\n      //Setup default values \n      let center = this.props.GFXProps?.center !== undefined ? [p.width * this.props.GFXProps?.center[0], p.height * this.props.GFXProps?.center[1]] : [0, 0];\n      let sw = this.props.GFXProps?.strokeWeight ? this.props.GFXProps?.strokeWeight : 1;\n      let defaultLength = this.props.GFXProps?.length ? this.props.GFXProps?.length * p.height : 0.01 * p.height;\n      let defaultAngle = this.props.GFXProps?.angle ? this.props.GFXProps?.angle : 90;\n\n      //Begin drawing\n      p.push();\n      p.translate(p.width / 2, p.height / 2);\n      p.noFill();\n      p.stroke(0, 0, 0);\n      p.strokeWeight(sw);\n      p.translate(center[0], center[1], 0);\n      let steps = cS.length;\n      for (let i = 0; i < steps; i++) {\n        let letter = cS[i];\n        let char = letter.symbol;\n        let param = letter.params && letter.params.length == 1 ? letter.params[0] + \"\" : undefined;\n        let val = param && !isNaN(parseFloat(param)) ? parseFloat(param) : undefined\n        this.drawChar(char, val || defaultLength, val || defaultAngle);\n      }\n      p.pop();\n      p.noLoop();\n    }\n  }\n  drawChar(char: string, l: number, a: number) {\n    let p = this.p5Context;\n    if (!p) return;\n    switch (char) {\n      case \"F\":\n        p.line(0, 0, l, 0);\n        p.translate(l, 0);\n        break;\n      case \"f\":\n        p.translate(l, 0);\n        break;\n      case \"+\":\n        p.rotate(a);\n        break;\n      case \"-\":\n        p.rotate(-a);\n        break;\n      case \"[\":\n        p.push()\n        break;\n      case \"]\":\n        p.pop();\n        break;\n      case \"E\":\n        p.ellipse(0, 0, l, l);\n        break;\n      case \"!\":\n        p.strokeWeight(l)\n        break;\n      case \"@\":\n        p.stroke(l, 100, 100);\n        break;\n      default:\n      //console.log(char + \" isn't turtle command\");\n    }\n  }\n\n  render() {\n    return <div ref={this.containerRef} style={{ width: this.props.GFXProps?.width || 800, height: this.props.GFXProps?.height || 800, backgroundColor: \"white\" }} />;\n  }\n\n}\n","/Users/bhavik/Documents/Active/tend/lsystem-examples/src/components/LSCustomizer.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":78,"column":59,"nodeType":"45","messageId":"46","endLine":78,"endColumn":61},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]